---
/**
 * Docs Sidebar Component
 * Collapsible navigation populated from Turso database
 */
import { getAllArticles } from '@logan/libsql-search';
import { getTursoClient } from '../lib/turso';

const client = getTursoClient();

// Get current path for active state
const currentPath = Astro.url.pathname;

// Fetch all articles and group by folder
const allArticles = await getAllArticles(client);
const articlesByFolder = allArticles.reduce(
  (acc, article) => {
    const folder = article.folder || 'root';
    if (!acc[folder]) {
      acc[folder] = [];
    }
    acc[folder].push(article);
    return acc;
  },
  {} as Record<string, typeof allArticles>,
);

// Format folder names for display
function formatFolderName(folder: string): string {
  if (folder === 'root') return 'Documentation';
  return folder
    .split('-')
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
}
---

<aside
  id="docs-sidebar"
  class="fixed top-14 z-30 -translate-x-full lg:translate-x-0 transition-transform duration-300 h-[calc(100vh-3.5rem)] w-64 shrink-0 overflow-y-auto border-r border-border bg-sidebar lg:block"
>
  <div class="py-6 px-6">
    <nav class="space-y-2">
      {Object.entries(articlesByFolder).map(([folder, articles]) => (
        <div class="mb-4" x-data="{ open: true }">
          <button
            @click="open = !open"
            class="flex w-full items-center justify-between py-2 text-sm font-medium text-sidebar-foreground hover:text-sidebar-foreground/80 transition-colors"
          >
            {formatFolderName(folder)}
            <svg
              class="h-4 w-4 transition-transform"
              :class="{ 'rotate-180': open }"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div x-show="open" class="mt-2 space-y-1">
            {articles.map((article) => {
              const href = `/content/${article.slug}`;
              const isActive = currentPath === href || currentPath.startsWith(href + '/');

              return (
                <a
                  href={href}
                  class:list={[
                    "block py-2 text-sm transition-colors pl-4 border-l-2",
                    isActive
                      ? "text-sidebar-foreground border-sidebar-primary font-medium"
                      : "text-muted-foreground border-transparent hover:text-sidebar-foreground hover:border-muted-foreground/30"
                  ]}
                >
                  {article.title}
                </a>
              );
            })}
          </div>
        </div>
      ))}
    </nav>
  </div>
</aside>

<!-- Alpine.js for collapsible sections -->
<script is:inline>
  if (typeof Alpine === 'undefined') {
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js';
    script.defer = true;
    document.head.appendChild(script);
  }
</script>
